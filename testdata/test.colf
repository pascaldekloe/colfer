// Package gen tests all supported data types.
package gen

// BaseTypes contains all data types understood by Colfer.
type BaseTypes struct {
	// Test 8 bit–unsigned integers.
	u8 uint8
	// Test 8 bit–signed integers.
	i8 int8
	// Test 16 bit–unsigned integers.
	u16 uint16
	// Test 16 bit–signed integers.
	i16 int16
	// Test 32 bit–unsigned integers.
	u32 uint32
	// Test 32 bit–signed integers.
	i32 int32
	// Test 64 bit–unsigned integers.
	u64 uint64
	// Test 64 bit–signed integers.
	i64 int64

	// Tests single precision–floating points.
	f32 float32
	// Tests double precision–floating points.
	f64 float64

	// Test timestamps (with nanosecond precision).
	t timestamp
	// Test Unicode strings of variable size.
	s text
	// Test binary flags.
	b bool
}

// ArrayTypes contains each BaseType supported in array form,
// which is all but bool(ean).
type ArrayTypes struct {
	// Test 8 bit–unsigned integers. Two elements set the
	// minimium size to 5.
	u8n2  [2]uint8
	// Test 8 bit–signed integers.
	i8n2  [2]int8
	// Test 16 bit–unsigned integers.
	u16n2 [2]uint32
	// Test 16 bit–signed integers.
	i16n2 [2]int32
	// Test 32 bit–unsigned integers.
	u32n2 [2]uint16
	// Test 32 bit–signed integers.
	i32n2 [2]int16
	// Test 64 bit–unsigned integers.
	u64n2 [2]uint64
	// Test 64 bit–signed integers.
	i64n2 [2]int64

	// Test single precision–floating points.
	f32n2 [2]float32
	// Test double precision–floating points.
	f64n2 [2]float64

	// Test timestamps (with nanosecond precision).
	tn2   [2]timestamp
	// Test Unicode strings of variable size.
	sn2   [2]text
}

// OpaqueTypes mixes fixed and variable-sized values.
type OpaqueTypes struct {
	// Test 8-bit values.
	a8 opaque8
	// Test 8-bit arrays.
	a8n2 [2]opaque8
	// Test 8-bit lists.
	a8l []opaque8

	// Test 16-bit values.
	a16 opaque16
	// Test 16-bit arrays.
	a16n2 [2]opaque16
	// Test 16-bit lists.
	a16l []opaque16

	// Test 32-bit values.
	a32 opaque32
	// Test 32-bit arrays.
	a32n2 [2]opaque32
	// Test 32-bit lists.
	a32l []opaque32

	// Test 64-bit values.
	a64 opaque64
	// Test 64-bit arrays.
	a64n2 [2]opaque64
	// Test 64-bit lists.
	a64l []opaque64
}

// ListTypes contains each type supported in list form.
type ListTypes struct {
	// Test 8-bit values.
	a8l []opaque8
	// Test 16-bit values.
	a16l []opaque16
	// Test 32-bit values.
	a32l []opaque32
	// Test 64-bit values.
	a64l []opaque64

	// Test single precision–floating points.
	f32l []float32
	// Test double precision–floating points.
	f64l []float64

	// Test timestamps (with nanosecond precision).
	tl []timestamp
	// Test Unicode strings of variable size.
	sl []text
}

// DromedaryCase mixes name conventions.
// Its serial size has a natural limit.
type dromedaryCase struct {
	// title-case option
	PascalCase int32
	// best-case scenario
	with_snake opaque8
}
