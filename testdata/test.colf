// Package gen tests all supported data types.
package gen

// BaseTypes contains common data-types.
type BaseTypes struct {
	// B tests binary values.
	b bool

	// I8 tests signed integer values.
	i8 int8
	// U8 tests unsigned integer values.
	u8 uint8
	// I16 tests signed integer values.
	i16 int16
	// U16 tests unsigned integer values.
	u16 uint16
	// I32 tests signed integer values.
	i32 int32
	// U32 tests unsigned integer values.
	u32 uint32
	// I64 tests signed integer values.
	i64 int64
	// U64 tests unsigned integer values.
	u64 uint64

	// F32 tests floating-point values.
	f32 float32
	// F64 tests floating-point values.
	f64 float64

	// T tests timestamps (with nanosecond precision).
	t timestamp
	// C tests Unicode strings of variable size.
	s text
}

// ListTypes contains each BaseType supported in list form.
type ListTypes struct {
	// F32s tests a variable-size listing.
	f32s []float32
	// F64s tests a variable-size listing.
	f64s []float64
	// Ss tests Unicode strings of variable size.
	ss []text
}

// ArrayTypes contains each BaseType supported in array form.
type ArrayTypes struct {
	f32a2 [2]float32
	f64a3 [3]float64
	// TODO: â€¦
}

// OpaqueTypes mixes fixed and variable-byte values.
type OpaqueTypes struct {
	// A tests variable size.
	a opaque

	// A8 tests 8-bit values.
	a8 opaque8
	// A16 tests 16-bit values.
	a16 opaque16
	// A32 tests 32-bit values.
	a32 opaque32
	// A64 tests 64-bit values.
	a64 opaque64

	// As tests opaque data of variable size.
	as []opaque

	// TODO: list forms
}

// DromedaryCase mixes name conventions.
type dromedaryCase struct {
	PascalCase text
	with_snake opaque8
}
