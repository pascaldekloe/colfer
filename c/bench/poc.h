// Code generated by colf(1); DO NOT EDIT.
// The compiler used schema file scheme.colf for package bench.

#include <stdint.h>
#include <stdlib.h>


#ifdef __cplusplus
extern "C" {
#endif


// Data Types
typedef struct colfer colfer;

struct colfer {

  int64_t key;

  struct {
    const char *utf8;
    size_t len;
  } host;

  uint16_t port;

  int64_t size;

  uint64_t hash;

  double ratio;

  // Holds COLFER_ROUTE_FLAG.
  unsigned int bools;
};

// Upper boundary for serial octets from struct colfer.
#define COLFER_MAX (16 * 1024 * 1024)

// Boolean fields of struct colfer.
#define COLFER_ROUTE_FLAG (1 << 0)

// Marshal encodes o as Colfer at start, up to COLFER_MAX octets in size. A zero
// return signals that the data in o exceeds COLFER_MAX.
size_t colfer_marshal(const colfer *o, void *start);

// Unmarshal decodes o as Colfer from start. The number of octets consumed is at
// least 3, and at most COLFER_MAX. A zero return signals malformed data. String
// fields are allocated including null terminator. Caller owns the memory.
size_t colfer_unmarshal(colfer *o, const void *start);


#ifdef __cplusplus
} // extern "C"
#endif
